yml 
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Vérifier le code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Étape 2 : Configurer Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Étape 3 : Construire et pousser les images Docker
      - name: Build and Push LLM Service Image
        run: |
          docker build -t ykfly/projet:llm-service-latest -f dockerfile.rag_llm .
          docker push ykfly/projet:llm-service-latest

      - name: Build and Push API Service Image
        run: |
          docker build -t ykfly/projet:api-service-latest -f dockerfile.api .
          docker push ykfly/projet:api-service-latest

      - name: Build and Push Frontend Service Image
        run: |
          docker build -t ykfly/projet:frontend-service-latest -f dockerfile.frontend .
          docker push ykfly/projet:frontend-service-latest

      - name: Build and Push Chroma Service Image
        run: |
          docker build -t ykfly/projet:chroma-service-latest -f dockerfile.chroma .
          docker push ykfly/projet:chroma-service-latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Déploiement (adapter cette commande à votre méthode de déploiement)
      - name: Deploy to Production
        run: |
          echo "Lancer les commandes de déploiement ici, par exemple via Docker Compose ou SSH."