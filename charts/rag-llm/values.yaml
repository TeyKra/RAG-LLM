# ------------------------------------------------------------
# Configuration of your microservices
# ------------------------------------------------------------
api:
  image: "mgn94/infrastructure-rag-llm:api-service-latest"  # Docker image for the API service
  replicas: 1                                             # Number of replicas for the API service
  port: 5002                                            # Port on which the API service listens
  metricsPath: "/metrics"                               # Endpoint for exposing API metrics

chroma:
  image: "mgn94/infrastructure-rag-llm:chroma-service-latest"  # Docker image for the Chroma service
  replicas: 1                                             # Number of replicas for the Chroma service
  port: 8000                                            # Port on which the Chroma service listens
  metricsPath: "/metrics"                               # Endpoint for exposing Chroma metrics

frontend:
  image: "mgn94/infrastructure-rag-llm:frontend-service-latest"  # Docker image for the Frontend service
  replicas: 1                                             # Number of replicas for the Frontend service
  port: 5003                                            # Port on which the Frontend service listens
  serviceType: LoadBalancer                             # Service type for the Frontend (e.g., LoadBalancer for external access)
  metricsPath: "/metrics"                               # Endpoint for exposing Frontend metrics

llm:
  image: "mgn94/infrastructure-rag-llm:llm-service-latest"  # Docker image for the LLM service
  replicas: 1                                             # Number of replicas for the LLM service
  port: 5001                                            # Port on which the LLM service listens
  metricsPath: "/metrics"                               # Endpoint for exposing LLM metrics

# -- Docker Secrets (to pull images from a private registry) --
imagePullSecrets:
  - name: my-registry-secret                            # Name of the secret used to authenticate with your Docker registry

# ------------------------------------------------------------
# Prometheus Parameters (scrape annotations)
# ------------------------------------------------------------
prometheusScrape:
  enabled: true            # Enable/disable the addition of Prometheus scrape annotations on pods
  path: "/metrics"         # Metrics endpoint path for scraping
  scheme: "http"           # Scheme used for scraping (http or https)

# ------------------------------------------------------------
# 3) Configuration for the Prometheus chart
# ------------------------------------------------------------
prometheus:
  # Disable creation of obsolete PodSecurityPolicy (PSP) & RBAC resources
  rbac:
    create: true         # Set to true to enable Prometheus RBAC management
    pspEnabled: false    # Disable creation of PodSecurityPolicy for Prometheus

  server:
    service:
      type: ClusterIP    # Service type for the Prometheus server (ClusterIP exposes it internally)
    # Disable PSP for the Prometheus server
    rbac:
      pspEnabled: false

# ------------------------------------------------------------
# Configuration for the Grafana chart
# ------------------------------------------------------------
grafana:
  service:
    type: LoadBalancer   # Expose Grafana externally (can also use NodePort, etc.)
  adminUser: admin       # Grafana admin username
  adminPassword: admin   # Grafana admin password
  persistence:
    enabled: false       # Disable persistent storage for Grafana

  # Disable creation of obsolete PSP & RBAC for Grafana
  rbac:
    create: false
    pspEnabled: false

  # Automatically create a Prometheus datasource in Grafana
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus                                  # Name of the datasource
          type: prometheus                                  # Type of datasource
          url: http://rag-llm-prometheus-server.default.svc.cluster.local  # URL for the Prometheus server
          access: proxy                                     # Access mode (proxy via Grafana)
          isDefault: true                                   # Set this datasource as the default one
